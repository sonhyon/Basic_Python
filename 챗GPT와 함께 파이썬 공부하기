- 활용법1. 오류의 원인 파악하기
  money = True
if money:
  print("택시를")
print("타고")
  print("가라")

- 활용법2. 작성한 코드 점검하기
input1 = input("첫 번째 숫자를 입력하세요:")
input2 = input("두 번째 숫자를 입력하세요:")

total = innput1 + input2
print("두 수의 합은 %s 입니다" % total)

- 활용법3. 코드의 품질 개선하기
f1 = open("test.txt", 'w')
f1.write("Life is too short!")
f1.colse()

f2 = open("test.txt", 'r')
print(f2.read())
f2.close()

- 활용법4. 이해하기 어려운 코드에 주석 달기
def chk_dup_numbers(s):
  result = []
  for num in s:
    if num not in result:
      result.append(num)
    else:
      return False
  return len(result) == 10

- 활용법5. 코드의 해석 요청하기
import re

p = re.compile("a[.]{3,}b")

- 활용법6. 기능 구현 의뢰하기
두 날짜의 차이를 구할 수 있는 파이썬 라이브러리를 알려 주고 예제도 보여 줘
  
